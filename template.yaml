AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  TransferFiles:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-TransferFiles
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: TransferFiles
      CodeUri: src
      Handler: transfer_process.transfer_files
      Runtime: python3.7
      Timeout: 900
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AmazonS3ReadOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
      Environment:
        Variables:
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
      MemorySize: !Ref EnvConfiglambdamemorysizeAsString
      Events:
        Archives:
          Type: S3
          Properties:
            Bucket: !Ref Archives
            Events:
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
  ArchiveFiles:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ArchiveFiles
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: ArchiveFiles
      CodeUri: src
      Handler: transfer_process.archive_files
      Runtime: python3.7
      MemorySize: !Ref EnvConfiglambdamemorysizeAsString
      Timeout: 60
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref Archives
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
      Environment:
        Variables:
          BUCKET_NAME: !Ref Archives
          BUCKET_ARN: !GetAtt Archives.Arn
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
          Metadata:
            StackeryName: ArchiveFilesTimer
  Archives:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-archives-${AWS::AccountId}
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfiglambdamemorysizeAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/memory-size
Metadata:
  EnvConfigParameters:
    EnvConfiglambdamemorysizeAsString: lambda.memory-size